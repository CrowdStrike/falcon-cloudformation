AWSTemplateFormatVersion: 2010-09-09
Description: Sample template for launching Falcon Sensor for Linux container image as an ECS Daemon Service to a cluster
Parameters:
  ECSClusterName:
    Type: String
    Description: Cluster name to deploy Falcon Sensor for Linux as a Daemon Service
  FalconImagePath:
    Type: String
    Description: The ECR image path including tag value for the Falcon Sensor for Linux container image
  SensorMemoryReservation:
    Type: String
    Description: Memory Reservation for the Falcon Sensor
    Default: 128
    AllowedValues:
      - 128
  ECSExecutionRoleArn:
    Type: String
    Description: Execution role name to exec in to the falcon container
  ECSTaskRoleArn:
    Type: String
    Description: Task role name to exec in to the falcon container

  APD:
    Type: String
    Default: ""
    Description: App Proxy Disable (APD)
  APH:
    Type: String
    Default: ""
    Description: App Proxy Host (APH)
  APP:
    Type: String
    Default: ""
    Description: App Proxy Port (APP)

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Mandatory Fields
        Parameters:
          - ECSClusterName
          - FalconImagePath
          - SensorMemoryReservation

Resources:
  FalconECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Name: cleanup-opt-crowdstrike
          MemoryReservation: 128
          Image: !Ref FalconImagePath
          EntryPoint:
            - "/bin/bash"
          Command:
            - '-c'
            - 'echo "Running /opt/CrowdStrike/falcon-daemonset-init -u"; /opt/CrowdStrike/falcon-daemonset-init -u'
          Essential: false
          Privileged: true
          ReadonlyRootFilesystem: false
          User: 0
          # LogConfiguration:
          #   LogDriver: awslogs
          #   Options:
          #     awslogs-group: !Sub "/aws/ecs/${ECSClusterName}/crowdstrike/falcon-daemon-service"
          #     awslogs-region: !Ref AWS::Region
          #     awslogs-stream-prefix: "node-init"
        - Name: cleanup-sleep
          Image: !Ref FalconImagePath
          EntryPoint:
            - "/bin/bash"
          Command:
            - '-c' 
            - 'sleep 300'
          Essential: true
          DependsOn:
            - ContainerName: cleanup-opt-crowdstrike
              Condition: COMPLETE
          MemoryReservation: !Ref SensorMemoryReservation
          Privileged: false
          ReadonlyRootFilesystem: true
          # LogConfiguration:
          #   LogDriver: awslogs
          #   Options:
          #     awslogs-group: !Sub "/aws/ecs/${ECSClusterName}/crowdstrike/falcon-daemon-service"
          #     awslogs-region: !Ref AWS::Region
          #     awslogs-stream-prefix: "node-sensor"
      PidMode: host
      RuntimePlatform:
        OperatingSystemFamily: LINUX
      RequiresCompatibilities:
        - EC2
      ExecutionRoleArn: !Ref ECSExecutionRoleArn
      TaskRoleArn: !Ref ECSTaskRoleArn

  FalconECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSClusterName
      SchedulingStrategy: DAEMON
      LaunchType: EC2
      EnableExecuteCommand: true
      ServiceName: crowdstrike-falcon-cleanup-daemon
      TaskDefinition: !Ref FalconECSTaskDefinition

  # LogGroup:
  #   Type: AWS::Logs::LogGroup
  #   Properties:
  #     LogGroupName: !Sub "/aws/ecs/${ECSClusterName}/crowdstrike/falcon-daemon-service"
